@model KutuphaneOtomasyon.ViewModels.Books.BookDetailsVm
@{
    ViewData["Title"] = Model.Book.Title;

    var available = Model.Book.AvailableCopies;
    var total = Math.Max(Model.Book.TotalCopies, 1);
    var pct = (int)Math.Round((double)available / total * 100);

    // ⬇️ Fonksiyon yerine değişken
    var lang = !string.IsNullOrWhiteSpace(Model.GbLanguage)
               ? Model.GbLanguage
               : (!string.IsNullOrWhiteSpace(Model.Book.Language) ? Model.Book.Language : "Bilinmiyor");

    var pages = !string.IsNullOrWhiteSpace(Model.GbPageCount)
                ? Model.GbPageCount
                : "Bilinmiyor";
}

<div class="container-fluid px-0 book-details">
    <div class="row g-4 align-items-stretch">
        <!-- Sol Sütun: Kapak + Uygunluk + Kısa Özet -->
        <div class="col-lg-4">
            <div class="card h-100 shadow-sm rounded-4 glass-wrap">
                <div class="glass glass-inner">
                <div class="card-body p-3 p-md-4 d-flex flex-column">
                    <div class="cover-box mb-3">
                        @if (!string.IsNullOrWhiteSpace(Model.Book.ThumbnailUrl))
                        {
                            <img src="@Model.Book.ThumbnailUrl.Replace("http://", "https://")"
                                 class="cover-img rounded-3 border"
                                 alt="@Model.Book.Title kitap kapağı">
                        }
                        else
                        {
                            <div class="cover-fallback rounded-3 d-flex align-items-center justify-content-center border">
                                <i class="fas fa-book-open fa-3x text-muted"></i>
                            </div>
                        }
                    </div>
                                        <!-- Sayaçlar -->
                    <div class="d-flex flex-wrap gap-2 my-2 kd-stats-inline">
    <span class="chip-pill is-count">
        <i class="fas fa-bolt me-1"></i>
        Toplam: @Model.TotalBorrowCount
    </span>

    <span class="chip-pill is-busy">
        <i class="fas fa-exclamation-circle me-1"></i>
        Geç: @Model.LateReturnCount
    </span>

    <span class="chip-pill @(available > 0 ? "is-available" : "is-busy")">
        <i class="fas fa-layer-group me-1"></i>
        Stok: @available/@Model.Book.TotalCopies
    </span>
</div>
                    <div class="d-flex justify-content-between small text-muted mb-1">
                        <span>Uygunluk</span>
                        <span>@available / @Model.Book.TotalCopies</span>
                    </div>
                        <div class="progress mb-3" style="height:10px; border-radius:999px;">
                        <div class="progress-bar @((available > 0) ? "bg-success" : "bg-danger")" style="width:@pct%"></div>
                    </div>

                    <div class="small row g-3">
                        <div class="col-6">
                            <div class="muted">ISBN</div>
                            <div class="fw-semibold">@(!string.IsNullOrWhiteSpace(Model.Book.ISBN) ? Model.Book.ISBN : "Bilinmiyor")</div>
                        </div>
                        <div class="col-6">
                            <div class="muted">Yayınevi</div>
                            <div class="fw-semibold">@(!string.IsNullOrWhiteSpace(Model.Book.Publisher) ? Model.Book.Publisher : "Bilinmiyor")</div>
                        </div>
                        <div class="col-6">
                            <div class="muted">Dil</div>
                            <div class="fw-semibold">@lang</div>
                        </div>
                        <div class="col-6">
                            <div class="muted">Sayfa</div>
                            <div class="fw-semibold">@pages</div>
                        </div>
                        <div class="col-12">
                            <div class="muted">Kategori</div>
                            <div class="fw-semibold">@Model.Book.Category</div>
                        </div>
                    </div>

                    <div class="d-grid gap-2 mt-4">
                        <a asp-action="Index" class="btn btn-outline-secondary btn-sm rounded-pill">
                            <i class="fas fa-arrow-left me-1"></i> Kitaplığa Dön
                        </a>
                        @if (available > 0)
                        {
                            <a asp-controller="Borrow" asp-action="Create" asp-route-bookId="@Model.Book.BookId"
                               class="btn btn-primary btn-sm rounded-pill">
                                <i class="fas fa-bookmark me-1"></i> Ödünç Al
                            </a>
                        }
                        else
                        {
                            <button class="btn btn-secondary btn-sm rounded-pill" disabled>
                                <i class="fas fa-clock me-1"></i> Şu an uygun değil
                            </button>
                        }
                    </div>

                    <div class="mt-3 d-flex flex-wrap gap-2">
                        @if (!string.IsNullOrWhiteSpace(Model.Book.Category))
                        {
                            <span class="chip badge rounded-pill bg-info-subtle text-info-emphasis px-3 py-2"><i class="fas fa-tag me-1"></i>@Model.Book.Category</span>
                        }
                      
                    </div>
                </div>
            </div>
            </div>
        </div>

        <!-- Sağ Sütun: Başlık + Sekmeler -->
        <div class="col-lg-8">
            <div class="card h-100 shadow-sm rounded-4 glass-wrap">
                <div class="glass glass-inner">
                <div class="card-body p-3 p-md-4">
                    <div class="d-flex flex-wrap align-items-center justify-content-between gap-2">
                        <div>
                            <h1 class="h4 mb-1">@Model.Book.Title</h1>
                            <div class="text-muted">@Model.Book.Author</div>
                        </div>
                        <div class="text-end">
                            <span class="chip-pill big @(available > 0 ? "is-available" : "is-busy")">
    <span class="dot"></span>
    @(available > 0 ? "Uygun" : "Müsait değil")
</span>
                        </div>

                    </div>

                  

                    <!-- Sekmeler -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item"><button class="nav-link active" data-bs-toggle="tab" data-bs-target="#tab-detay" type="button">Detaylar</button></li>
                        <li class="nav-item"><button class="nav-link" data-bs-toggle="tab" data-bs-target="#tab-aktuel" type="button">Şu An Kimde?</button></li>
                        <li class="nav-item"><button class="nav-link" data-bs-toggle="tab" data-bs-target="#tab-gecmis" type="button">Ödünç Geçmişi</button></li>
                    </ul>

                    <div class="tab-content pt-3">
                        <!-- Detaylar -->
                        <div class="tab-pane fade show active" id="tab-detay">
                            @if (!string.IsNullOrWhiteSpace(Model.GbDescription))
                            {
                                <div class="bg-light p-3 rounded-3 small text-secondary">
                                    @Html.Raw(Model.GbDescription)
                                </div>
                            }
                            else
                            {
                                <div class="text-muted small">Bu kitap için ek açıklama bulunmuyor.</div>
                            }
                        </div>

                        <!-- Şu An Kimde? -->
                           @{
    var hasActive = Model.CurrentBorrow != null
                    && Model.CurrentBorrower != null
                    && !Model.CurrentBorrow.ReturnDate.HasValue;

    var due = Model.CurrentBorrow?.DueDate;
    var nm  = Model.CurrentBorrower?.Name ?? "";
    var initials = String.Join("", (nm.Split(' ', StringSplitOptions.RemoveEmptyEntries)
                      .Take(2).Select(s => s[0]))).ToUpper(); // ör: "Ali Veli" -> "AV"
}
<div class="tab-pane fade" id="tab-aktuel">
    <div class="kd-section-title">
        <i class="fas fa-user-clock"></i> Şu An Kimde?
        <span class="badge-soft">Anlık durum</span>
    </div>

    @if (hasActive)
    {
       
            var gun = due.HasValue ? (due.Value.Date - DateTime.Now.Date).Days : (int?)null;
            var stateClass = gun.HasValue
                ? (gun.Value < 0 ? "danger" : (gun.Value == 0 ? "warn" : "")) : "warn";
        
        <div class="holder-card @stateClass">
            <div class="holder-left">
                <div class="avatar">@initials</div>
                <div class="holder-meta">
                    <div class="name">@Model.CurrentBorrower!.Name</div>
                    <div class="sub">
                        Alış: @Model.CurrentBorrow!.BorrowDate.ToString("dd.MM.yyyy HH:mm")
                        @if (due.HasValue){<text> • Son teslim: @due.Value.ToString("dd.MM.yyyy")</text>}
                    </div>
                </div>
            </div>

            <div class="kd-actions">
                @if (due.HasValue)
                {
                    var g = (due.Value.Date - DateTime.Now.Date).Days;
                    if (g < 0)
                    {
                        <span class="badge-soft-status late">@Math.Abs(g) gün gecikti</span>
                    }
                    else if (g == 0)
                    {
                        <span class="badge-soft-status today">Son gün</span>
                    }
                    else
                    {
                        <span class="badge-soft-status left">@g gün kaldı</span>
                    }
                }
                else
                {
                    <span class="badge-soft-status none">Son teslim yok</span>
                }
            </div>
        </div>
    }
    else
    {
        <div class="text-muted small">Bu kitabı üzerinde bulunduran aktif üye yok.</div>
    }
</div>

                        <!-- Ödünç Geçmişi -->
                        <div class="tab-pane fade" id="tab-gecmis">
    <div class="kd-section-title">
        <i class="fas fa-history"></i> Ödünç Geçmişi
        <span class="badge-soft">Son @((Model.History?.Count ?? 0)) kayıt</span>
    </div>

    @if (Model.History != null && Model.History.Any())
    {
        <div class="history-wrap">
            <div class="table-responsive history-table-wrap">
                <table class="table table-hover table-sm align-middle history">
                    <thead>
                        <tr>
                            <th style="min-width:160px">Üye</th>
                            <th style="min-width:150px">Alış</th>
                            <th style="min-width:150px">İade</th>
                            <th class="text-center" style="min-width:120px">Süre</th>
                            <th class="text-end" style="min-width:140px">Durum</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var b in Model.History)
                        {
                            var sure = (b.ReturnDate.HasValue ? (b.ReturnDate.Value.Date - b.BorrowDate.Date).Days : (int?)null);
                            bool returned = b.ReturnDate.HasValue;
                            bool overdue  = !returned && b.DueDate.HasValue && b.DueDate.Value.Date < DateTime.Now.Date;
                            bool lastDay  = !returned && b.DueDate.HasValue && b.DueDate.Value.Date == DateTime.Now.Date;

                            <tr>
                                <td class="fw-semibold text-truncate" title="@b.Member?.Name">
                                    <i class="far fa-user me-1 text-secondary"></i>@b.Member?.Name
                                </td>
                                <td>@b.BorrowDate.ToString("dd.MM.yyyy HH:mm")</td>
                                <td>@(returned ? b.ReturnDate!.Value.ToString("dd.MM.yyyy") : "—")</td>
                                <td class="text-center">@((sure.HasValue ? sure.Value.ToString() : "—"))</td>
                                <td class="text-end">
                                    @if (returned)
                                    {
                                        <span class="badge-soft-status return">İade edildi</span>
                                    }
                                    else if (overdue)
                                    {
                                        var g = (DateTime.Now.Date - (b.DueDate!.Value.Date)).Days;
                                        <span class="badge-soft-status late">@g gün gecikti</span>
                                    }
                                    else if (lastDay)
                                    {
                                        <span class="badge-soft-status today">Son gün</span>
                                    }
                                    else if (b.DueDate.HasValue)
                                    {
                                        var gLeft = (b.DueDate!.Value.Date - DateTime.Now.Date).Days;
                                        <span class="badge-soft-status left">@gLeft gün kaldı</span>
                                    }
                                    else
                                    {
                                        <span class="badge-soft-status none">Son teslim yok</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else
    {
        <div class="text-muted small">Geçmiş ödünç kaydı bulunamadı.</div>
    }
</div>
                    <!-- Bu kitabı alanlar bunları da aldı -->
                    @* === ÖNERİLER (küçük kartlar + fallback) === *@
@* === ÖNERİLER (2x2 sabit; önce primary, eksikse rastgele doldur) === *@
@{
    // 1) Asıl öneriler (primary)
    var primary = (Model.AlsoBorrowedTop ?? Enumerable.Empty<KutuphaneOtomasyon.ViewModels.Books.AlsoBorrowedVm>())
                  .ToList();

    // 2) Fallback havuzu: benzer yazar + benzer kategori -> AlsoBorrowedVm'e map
    var pool = new List<KutuphaneOtomasyon.ViewModels.Books.AlsoBorrowedVm>();
    if (Model.SimilarByAuthor != null)
    {
        pool.AddRange(Model.SimilarByAuthor.Select(b => new KutuphaneOtomasyon.ViewModels.Books.AlsoBorrowedVm {
            BookId = b.BookId, Title = b.Title, Author = b.Author,
            AvailableCopies = b.AvailableCopies, ThumbnailUrl = b.ThumbnailUrl
        }));
    }
    if (Model.SimilarByCategory != null)
    {
        pool.AddRange(Model.SimilarByCategory.Select(b => new KutuphaneOtomasyon.ViewModels.Books.AlsoBorrowedVm {
            BookId = b.BookId, Title = b.Title, Author = b.Author,
            AvailableCopies = b.AvailableCopies, ThumbnailUrl = b.ThumbnailUrl
        }));
    }

    // 3) Hedef liste: önce primary'den ekle, 4'ü bulamazsa havuzdan rastgele tamamla
    var target = new List<KutuphaneOtomasyon.ViewModels.Books.AlsoBorrowedVm>();
    foreach (var p in primary)
    {
        if (!target.Any(t => t.BookId == p.BookId)) target.Add(p);
        if (target.Count == 4) break;
    }

    var rnd = new Random();
    var candidates = pool
        .Where(p => !target.Any(t => t.BookId == p.BookId))
        .GroupBy(x => x.BookId).Select(g => g.First()) // uniq
        .OrderBy(_ => rnd.Next())
        .ToList();

    foreach (var c in candidates)
    {
        target.Add(c);
        if (target.Count == 4) break;
    }

    var hasPrimaryAny = primary.Any();
}

@if (target.Any())
{
    <h6 class="mt-4 mb-2">
        @(hasPrimaryAny ? "Bu kitabı alanlar bunları da aldı" : "Şunlara da göz atabilirsiniz")
    </h6>

    <!-- 2 sütun, toplam en fazla 4 kart -->
    <div class="row g-2 g-md-3">
        @foreach (var x in target)
        {
            <div class="col-6">
                <a asp-action="Details" asp-route-id="@x.BookId" class="rec-card text-decoration-none text-reset">
                    <div class="rec-cover">
                        @if (!string.IsNullOrWhiteSpace(x.ThumbnailUrl))
                        {
                            <img src="@x.ThumbnailUrl.Replace("http://","https://")" alt="@x.Title" />
                        }
                        else
                        {
                            <div class="rec-fallback"><i class="fas fa-book"></i></div>
                        }
                    </div>
                    <div class="rec-body">
                        <div class="rec-title" title="@x.Title">@x.Title</div>
                        @if (!string.IsNullOrWhiteSpace(x.Author))
                        {
                            <div class="rec-author" title="@x.Author">@x.Author</div>
                        }
                    </div>
                    <div class="rec-meta">
    <span class="chip-pill @(x.AvailableCopies > 0 ? "is-available" : "is-busy")">
        <i class="fas @(x.AvailableCopies > 0 ? "fa-check-circle" : "fa-clock") me-1"></i>
        @(x.AvailableCopies > 0 ? "Uygun" : "Meşgul")
    </span>
    @if (hasPrimaryAny && x.Count > 0)
    {
        <span class="chip-pill is-count">
            <i class="fas fa-bolt me-1"></i>@x.Count ×
        </span>
    }
</div>
                </a>
            </div>
        }
    </div>
}



                    <!-- Benzer Kitaplar -->
                    @if ((Model.SimilarByAuthor?.Any() ?? false) || (Model.SimilarByCategory?.Any() ?? false))
                    {
                        <div class="row g-4 mt-2">
                            @if (Model.SimilarByAuthor?.Any() ?? false)
                            {
                                <div class="col-12">
                                    <h6 class="mb-2">Yazara Benzer</h6>
                                  <div class="row row-cols-2 row-cols-md-4 g-3">
                                        @foreach (var b in Model.SimilarByAuthor.Take(8))
                                        {
                                            <div class="col">
                                                <a asp-action="Details" asp-route-id="@b.BookId" class="card card-link h-100 p-2 rounded-3 shadow-xs text-reset text-decoration-none">

                                                    <div class="fix-cover mb-2">
                                                        @if (!string.IsNullOrWhiteSpace(b.ThumbnailUrl))
                                                        {
                                                            <img src="@b.ThumbnailUrl.Replace("http://", "https://")" class="w-100 h-100 object-fit-contain rounded" alt="@b.Title" />
                                                        }
                                                        else
                                                        {
                                                            <div class="bg-light rounded d-flex align-items-center justify-content-center"><i class="fas fa-book text-muted"></i></div>
                                                        }
                                                    </div>
                                                    </a>
                                                    <div class="small fw-semibold text-truncate" title="@b.Title">@b.Title</div>
                                                    <div class="small text-muted text-truncate">@b.Author</div>
                                              
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                            @if (Model.SimilarByCategory?.Any() ?? false)
                            {
                                <div class="col-12">
                                    <h6 class="mb-2">Kategoriye Benzer</h6>
                                    <div class="row row-cols-2 row-cols-md-4 g-3">
                                        @foreach (var b in Model.SimilarByCategory.Take(8))
                                        {
                                            <div class="col">
                                                <a asp-action="Details" asp-route-id="@b.BookId" class="card card-link h-100 p-2 rounded-3 shadow-xs text-reset text-decoration-none">
                                                    <div class="fix-cover mb-2">
                                                        @if (!string.IsNullOrWhiteSpace(b.ThumbnailUrl))
                                                        {
                                                            <img src="@b.ThumbnailUrl.Replace("http://", "https://")" class="w-100 h-100 object-fit-contain rounded" alt="@b.Title" />
                                                        }
                                                        else
                                                        {
                                                            <div class="bg-light rounded d-flex align-items-center justify-content-center"><i class="fas fa-book text-muted"></i></div>
                                                        }
                                                    </div>
                                                    <div class="small fw-semibold text-truncate" title="@b.Title">@b.Title</div>
                                                    <div class="small text-muted text-truncate">@b.Author</div>
                                                </a>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .book-details .card {
            border: 0
        }

        .no-cover {
            background: #f8f9fa
        }

        .object-fit-contain {
            object-fit: contain
        }

        .muted {
            font-size: .75rem;
            color: #6c757d
        }

        .chip {
            font-size: .8rem
        }

        .hover-up {
            transition: transform .12s ease, box-shadow .12s ease
        }

            .hover-up:hover {
                transform: translateY(-2px);
                box-shadow: 0 .5rem 1rem rgba(0,0,0,.08)
            }

        .shadow-xs {
            box-shadow: 0 .25rem .75rem rgba(0,0,0,.06) !important
        }

        .card-link:hover {
            background: #f8f9fa
        }


        .book-details {
            --bd-radius: 16px;
            --bd-gap: 1rem;
            --title-size: clamp(1.125rem, 0.8rem + 1.2vw, 1.6rem);
            --sub-size: clamp(.9rem, .8rem + .2vw, 1rem);
            --text-size: .95rem;
        }

            .book-details .card {
                border: 0;
            }

            .book-details .card-body {
                font-size: var(--text-size);
            }

            /* Başlık boyutları */
            .book-details h1.h4 {
                font-size: var(--title-size);
                margin: 0;
            }

            .book-details .text-muted {
                font-size: var(--sub-size);
            }

        /* ====== GLASS / YÜZEN PANEL ====== */
        .glass {
            background: rgba(255,255,255,.86);
            backdrop-filter: blur(6px);
            -webkit-backdrop-filter: blur(6px);
            box-shadow: 0 12px 30px rgba(16,24,40,.08);
            border-radius: var(--bd-radius);
            border: 1px solid rgba(17, 24, 39, .06);
        }

        /* Sağ taraftaki sekme kartını ve sol kartı glass yapalım */
        .book-details .card.shadow-sm.rounded-4 {
            background: transparent;
        }

            .book-details .card.shadow-sm.rounded-4 > .card-body {
                background: transparent;
            }

        .book-details .card.h-100.shadow-sm.rounded-4 {
            box-shadow: none !important;
        }

            .book-details .card.h-100.shadow-sm.rounded-4.glass-wrap {
                padding: 0;
            }

        .book-details .glass-inner {
            padding: 1rem 1rem 1.25rem;
        }
        @@media (min-width: 768px) {
            .book-details .glass-inner

        {
            padding: 1.25rem 1.5rem 1.5rem;
        }

        }

        /* ====== KAPAK GÖRSELİ ====== */
        .cover-box {
            height: 320px; /* masaüstü */
            border-radius: 12px;
            overflow: hidden;
        }
        @@media (max-width: 575.98px) {
            .cover-box

        {
            height: 280px;
        }
        /* mobilde biraz küçült */
        }
        /* === Küçük öneri kartları === */
.rec-grid { margin-top: .25rem; }
.rec-card{
  display:block;background:#fff;border:1px solid rgba(17,24,39,.06);
  border-radius:12px;padding:.5rem;box-shadow:0 6px 18px rgba(2,6,23,.06);
  transition:transform .12s ease, box-shadow .12s ease, background .12s ease;
  height:100%;
}
.rec-card:hover{ transform:translateY(-2px); box-shadow:0 12px 26px rgba(0,0,0,.08); }

.rec-cover{
  height:120px; border-radius:8px; background:#fcfcfd; display:flex; align-items:center; justify-content:center;
  overflow:hidden; margin-bottom:.5rem;
}
@@media (min-width:768px){ .rec-cover{ height:140px; } }
.rec-cover img{ max-height:100%; max-width:100%; object-fit:contain; display:block; }
.rec-fallback{ color:#9aa1aa; font-size:1.25rem; }

.rec-body{ min-height:44px; }
.rec-title{
  font-weight:700; font-size:.83rem; line-height:1.2; display:-webkit-box; -webkit-line-clamp:2; -webkit-box-orient:vertical; overflow:hidden;
}
.rec-author{
  font-size:.75rem; color:#6b7280; margin-top:.15rem; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;
}
.rec-meta{ margin-top:.4rem; display:flex; gap:.35rem; align-items:center; flex-wrap:wrap; }
.rec-meta .badge{ font-size:.7rem; padding:.25rem .5rem; }
        .badge {
            white-space: nowrap;
        }
        
        /* --- Benzer kart kapakları için sabit oran --- */
.book-details .fix-cover{
  height: clamp(140px, 18vw, 200px);  /* her ekranda kontrollü yükseklik */
  width: 100%;
  border-radius: 8px;
  background: #fcfcfd;
  display: flex; align-items: center; justify-content: center;
  overflow: hidden;
}
.book-details .fix-cover img{
  width: 100%; height: 100%;
  object-fit: contain; display: block;
}
.book-details .card .small.fw-semibold,
.book-details .card .small.text-muted{
  display:-webkit-box; -webkit-line-clamp:2; -webkit-box-orient:vertical;
  overflow:hidden;
}
/* Güvenlik ağı: .card içindeki rasgele img’ler ratio’yu taşırmasın */
.book-details .card img{
  max-width:100%;
}
        .cover-img, .cover-fallback {
            width: 100%;
            height: 100%;
            object-fit: contain;
            background: #fcfcfd;
        }

        /* ====== BUTONLAR ====== */
        .book-details .btn {
            font-weight: 600;
        }

            .book-details .btn.rounded-pill {
                border-radius: 999px !important;
            }

        /* ====== NAV TABS (daha belirgin) ====== */
        .book-details .nav-tabs {
            border: 0;
            gap: .25rem;
        }

            .book-details .nav-tabs .nav-link {
                border: 0;
                border-radius: 999px;
                padding: .45rem .9rem;
                background: #f3f4f6;
                color: #374151;
                font-weight: 600;
            }

                .book-details .nav-tabs .nav-link.active {
                    background: linear-gradient(135deg, #E8F3FF, #eef6ff);
                    color: #1d4ed8;
                    box-shadow: 0 6px 16px rgba(29,78,216,.18);
                }

        /* ====== KÜÇÜK BİLGİ BLOKLARI ====== */
        .muted {
            font-size: .78rem;
            color: #6b7280;
        }

        .fw-semibold {
            font-weight: 600;
        }

        /* ====== LİST GROUP (Şu an kimde?) ====== */
        .book-details .list-group {
            border-radius: 12px;
            overflow: hidden;
        }

        .book-details .list-group-item {
            border: 0;
            border-bottom: 1px solid rgba(17,24,39,.06);
        }

            .book-details .list-group-item:last-child {
                border-bottom: 0;
            }

        /* ====== TABLONUN PANEL İÇİNDE DURMASI ====== */
        .table-wrap {
            border-radius: 12px;
            overflow: hidden;
            border: 1px solid rgba(17,24,39,.06);
            box-shadow: 0 6px 20px rgba(2,6,23,.06);
            background: #fff;
        }

        /* ====== KART IZGARALARI ====== */
        .card-link, .hover-up {
            transition: transform .12s ease, box-shadow .12s ease, background .12s ease;
        }

            .card-link:hover {
                transform: translateY(-2px);
                box-shadow: 0 12px 26px rgba(0,0,0,.08);
            }

        /* ====== İKON + METİN TEK SATIR ZORLAMASI ====== */
        .badge .fa-check, .badge .fa-times {
            vertical-align: -1px;
        }
        .chip-pill{
  --bg:#f8fafc;           /* zemin */
  --fg:#334155;           /* metin */
  --ring:rgba(2,6,23,.06);/* kenar */
  --glow:rgba(2,132,199,.0);
  display:inline-flex; align-items:center; gap:.4rem;
  font-weight:700; font-size:.75rem; line-height:1;
  padding:.45rem .7rem; border-radius:999px;
  background:var(--bg);
  color:var(--fg);
  border:1px solid var(--ring);
  box-shadow:0 4px 14px var(--glow);
  transition:transform .12s ease, box-shadow .12s ease, background .12s ease, color .12s ease, border-color .12s ease;
  white-space:nowrap;
}
.chip-pill.big{ font-size:.8rem; padding:.5rem .85rem; }
.chip-pill .dot{
  width:.5rem; height:.5rem; border-radius:999px; display:inline-block;
  background:currentColor; box-shadow:0 0 0 3px color-mix(in oklab, currentColor 20%, transparent);
}

/* Durum temaları */
.chip-pill.is-available{
  --bg:color-mix(in oklab, #22c55e 14%, white);
  --fg:#166534;
  --ring:rgba(34,197,94,.22);
  --glow:rgba(34,197,94,.16);
}
.chip-pill.is-busy{
  --bg:color-mix(in oklab, #f59e0b 12%, white);
  --fg:#7c2d12;
  --ring:rgba(245,158,11,.22);
  --glow:rgba(245,158,11,.14);
}
.chip-pill.is-count{
  --bg:color-mix(in oklab, #60a5fa 14%, white);
  --fg:#1e3a8a;
  --ring:rgba(59,130,246,.22);
  --glow:rgba(59,130,246,.16);
}
.chip-pill.is-info{
  --bg:color-mix(in oklab, #a78bfa 14%, white);
  --fg:#4c1d95;
  --ring:rgba(167,139,250,.22);
  --glow:rgba(167,139,250,.16);
}

/* Hover mikro etki */
.chip-pill:hover{ transform:translateY(-1px); box-shadow:0 10px 22px var(--glow); }

/* Rec meta içindeki boşlukları ayarla */
.rec-meta{ margin-top:.45rem; display:flex; gap:.4rem .5rem; flex-wrap:wrap; }
/* === Kimde / Geçmiş: görsel yükseltmeler === */
.kd-section-title{
  display:flex;align-items:center;gap:.5rem;
  font-weight:800; font-size:.95rem; letter-spacing:.2px;
  color:#0f172a; margin-bottom:.75rem;
}
.kd-section-title .badge-soft{
  background:linear-gradient(135deg,#eef2ff,#f5f3ff);
  color:#3730a3; border:1px solid rgba(55,48,163,.15);
  padding:.25rem .6rem; border-radius:999px; font-weight:700;
}

.holder-card{
  border:1px solid rgba(17,24,39,.07);
  border-left:4px solid #22c55e;        /* yeşil şerit */
  border-radius:14px; padding:14px; background:#fff;
  display:flex; align-items:center; justify-content:space-between; gap:12px;
  box-shadow:0 10px 24px rgba(2,6,23,.06);
  transition:transform .12s ease, box-shadow .12s ease;
}
.holder-card.warn{ border-left-color:#f59e0b; }
.holder-card.danger{ border-left-color:#ef4444; }
.holder-card:hover{ transform:translateY(-2px); box-shadow:0 14px 32px rgba(2,6,23,.09); }

.holder-left{ display:flex; align-items:center; gap:12px; min-width:0; }
.avatar{
  width:44px; height:44px; border-radius:999px; background:#eef2ff;
  color:#3730a3; font-weight:800; display:flex; align-items:center; justify-content:center;
  border:1px solid rgba(55,48,163,.15);
  box-shadow:0 4px 12px rgba(55,48,163,.15);
  flex:0 0 auto;
}
.holder-meta{ min-width:0; }
.holder-meta .name{ font-weight:800; line-height:1.1; }
.holder-meta .sub{ color:#64748b; font-size:.8rem; white-space:nowrap; overflow:hidden; text-overflow:ellipsis; }

.kd-actions{ display:flex; gap:.4rem; align-items:center; flex-wrap:wrap; }

/* Geçmiş – timeline tablo hibrit */
.history-wrap{
  border:1px solid rgba(17,24,39,.06); background:#fff; border-radius:14px;
  box-shadow:0 12px 30px rgba(16,24,40,.08); overflow:hidden;
}
.table.history{
  margin:0; font-size:.9rem;
}
.table.history thead th{
  background:linear-gradient(180deg,#f8fafc,#f1f5f9);
  border-bottom:1px solid #e5e7eb; color:#0f172a; font-weight:800;
}
.table.history tbody tr{ transition:background .12s ease, transform .12s ease; }
.table.history tbody tr:hover{ background:#f8fbff; transform:translateY(-1px); }

.badge-soft-status{
  border-radius:999px; padding:.25rem .6rem; font-weight:800; font-size:.75rem; white-space:nowrap;
  border:1px solid transparent;
}
.badge-soft-status.left   { background:color-mix(in oklab,#22c55e 16%, #fff); color:#14532d; border-color:rgba(34,197,94,.22);}
.badge-soft-status.today  { background:color-mix(in oklab,#f59e0b 18%, #fff); color:#7c2d12; border-color:rgba(245,158,11,.22);}
.badge-soft-status.late   { background:color-mix(in oklab,#ef4444 16%, #fff); color:#7f1d1d; border-color:rgba(239,68,68,.22);}
.badge-soft-status.none   { background:color-mix(in oklab,#a78bfa 16%, #fff); color:#4c1d95; border-color:rgba(167,139,250,.22);}
.badge-soft-status.return { background:color-mix(in oklab,#60a5fa 16%, #fff); color:#1e3a8a; border-color:rgba(59,130,246,.22);}

/* piller sabit ölçü (önceki talep ile uyumlu) */
.chip-pill, .badge-soft-status { height:28px; min-width:120px; display:inline-flex; align-items:center; justify-content:center; box-sizing:border-box; }
/* Tab ve butonlarda tıklayınca çıkan siyah border'ı kaldır */
.book-details .nav-tabs .nav-link:focus,
.book-details .nav-tabs .nav-link:focus-visible,
.book-details .btn:focus,
.book-details .btn:focus-visible {
    outline: none !important;
    box-shadow: none !important;
}
/* === Önerilen / benzer kitap kartlarındaki kitap adları === */
.rec-title,
.book-details .card .small.fw-semibold {
    font-family: 'Segoe UI', 'Roboto', sans-serif;
    font-size: 0.95rem;
    font-weight: 700;
    color: #1f2937;   /* koyu gri */
    line-height: 1.3;
    letter-spacing: 0.2px;
    transition: color 0.15s ease;
}

/* --- 1. Minimal koyulaşma --- */
.rec-card:hover .rec-title,
.book-details .card:hover .small.fw-semibold {
    color: #111827; /* daha koyu gri */
}
.kd-stats-inline { margin-top:.5rem; margin-bottom:.75rem; }

.kd-stats-inline .chip-pill{
  height: 26px;            /* biraz daha kompakt */
  min-width: auto;         /* sabit genişliği kaldır */
  padding: .35rem .6rem;   /* yumuşak iç boşluk */
  font-weight: 700;
  font-size: .8rem;        /* küçük tip */
  gap: .35rem;
}

.kd-stats-inline .chip-pill i{
  font-size: .9em;         /* ikon küçük dursun */
  opacity: .9;
}

/* Başlık satırı ile rozetler arası boşluğu sıkılaştırmak için opsiyonel */
.book-details .card .d-flex.align-items-center.justify-content-between.gap-2{
  row-gap: .25rem;
}
/* Sadece geçmiş tablosunun responsive div'inde iç scroll'u kapat */
.history-table-wrap{
  max-height:none !important;
  overflow:visible !important;
}
    </style>
}
