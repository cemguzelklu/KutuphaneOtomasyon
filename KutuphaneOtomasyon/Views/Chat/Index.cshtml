@{
    ViewData["Title"] = "Chatbot";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container">
    <h4 class="mb-3">🤖 Kütüphane Asistanı</h4>

    <div id="chat" style="height:360px; overflow:auto; border:1px solid #eee; border-radius:8px; padding:12px; background:#fafafa"></div>

    <div class="input-group mt-2">
        <input id="msg" class="form-control" placeholder="Mesajınızı yazın..." />
        <button class="btn btn-primary" onclick="send()">Gönder</button>
    </div>
</div>

@section Scripts {
    <script>
        function add(who, text){
          const div = document.createElement('div');
          div.style.margin = '6px 0';
          div.innerHTML = `<b>${who==='user'?'Siz':'Asistan'}:</b> ${text.replace(/\n/g,'<br>')}`;
          document.getElementById('chat').appendChild(div);
          document.getElementById('chat').scrollTop = document.getElementById('chat').scrollHeight;
        }
        async function send(){
          const input = document.getElementById('msg');
          const m = (input.value || '').trim();
          if(!m) return;
          add('user', m);
          input.value = '';
          try{
            const resp = await fetch('@Url.Action("Ask", "Chat")', {
              method: 'POST',
              headers: { 'Content-Type':'application/x-www-form-urlencoded' },
              body: 'message=' + encodeURIComponent(m)
            });
            const j = await resp.json();
            let suffix = j.fallback ? ` <br><small><i>(fallback: ${j.provider})</i></small>` : '';
            add('bot', j.reply + suffix);
          }catch(e){
            add('bot', 'Şu an yanıt veremiyorum.');
          }
        }
    </script>
}
